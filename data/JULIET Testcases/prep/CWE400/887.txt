
    private void goodB2G() throws Throwable {
        int count;
        if(IO.staticReturnsTrueOrFalse()) {
            count = Integer.MIN_VALUE; 
            
 {
                String stringNumber = System.getenv("ADD");
                if (stringNumber != null) {
                    try {
                        count = Integer.parseInt(stringNumber.trim());
                    }
                    catch(NumberFormatException exceptNumberFormat) {
                        IO.logger.log(Level.WARNING, "Number format exception parsing count from string", exceptNumberFormat);
                    }
                }
            }
        }
        else {

            count = Integer.MIN_VALUE; 

            
 {
                String stringNumber = System.getenv("ADD");
                if (stringNumber != null) {
                    try {
                        count = Integer.parseInt(stringNumber.trim());
                    }
                    catch(NumberFormatException exceptNumberFormat) {
                        IO.logger.log(Level.WARNING, "Number format exception parsing count from string", exceptNumberFormat);
                    }
                }
            }

        }

        if(IO.staticReturnsTrueOrFalse()) {
            
            if (count > 0 && count <= 2000) {
                Thread.sleep(count);
            }
        }
        else {

            
            if (count > 0 && count <= 2000) {
                Thread.sleep(count);
            }

        }
    }