
    private void goodB2G2() throws Throwable {
        int data = 0;

        data = Integer.MIN_VALUE; 
 {
            InputStreamReader readerInputStream = null;
            BufferedReader readerBuffered = null;

            
            try {
                readerInputStream = new InputStreamReader(System.in, "UTF-8");
                readerBuffered = new BufferedReader(readerInputStream);

                
                String stringNumber = readerBuffered.readLine();
                if (stringNumber != null) {
                    try {
                        data = Integer.parseInt(stringNumber.trim());
                    }
                    catch(NumberFormatException exceptNumberFormat) {
                        IO.logger.log(Level.WARNING, "Number format exception parsing data from string", exceptNumberFormat);
                    }
                }
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
            }
            finally {
                try {
                    if (readerBuffered != null) {
                        readerBuffered.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing BufferedReader", exceptIO);
                }

                try {
                    if (readerInputStream != null) {
                        readerInputStream.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing InputStreamReader", exceptIO);
                }
            }
        }
        

        goodB2G2PublicStatic = true;
        (new CWE369_Divide_by_Zero__int_console_readLine_modulo_22b()).goodB2G2Sink(data );
    }