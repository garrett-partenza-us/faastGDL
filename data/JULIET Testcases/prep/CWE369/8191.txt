
    private void goodB2G() throws Throwable {

        data = -1.0f; 

        InputStreamReader readerInputStream = null;
        BufferedReader readerBuffered = null;

        
        try {
            readerInputStream = new InputStreamReader(System.in, "UTF-8");
            readerBuffered = new BufferedReader(readerInputStream);

            
            String stringNumber = readerBuffered.readLine();

            if (stringNumber != null) {
                try {
                    data = Float.parseFloat(stringNumber.trim());
                }
                catch (NumberFormatException exceptNumberFormat) {
                    IO.logger.log(Level.WARNING, "Number format exception parsing data from string", exceptNumberFormat);
                }
            }
        }
        catch (IOException exceptIO) {
            IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
        }
        finally {
            
            try {
                if (readerBuffered != null) {
                    readerBuffered.close();
                }
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error closing BufferedReader", exceptIO);
            }

            try {
                if (readerInputStream != null) {
                    readerInputStream.close();
                }
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error closing InputStreamReader", exceptIO);
            }
        }

        (new CWE369_Divide_by_Zero__float_console_readLine_divide_68b()).goodB2GSink();
    }