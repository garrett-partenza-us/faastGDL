
    private void goodB2G(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        int data;
        if(IO.staticReturnsTrueOrFalse()) {
            data = Integer.MIN_VALUE; 
 {
                String stringNumber = request.getParameter("name");
                try {
                    data = Integer.parseInt(stringNumber.trim());
                }
                catch(NumberFormatException exceptNumberFormat) {
                    IO.logger.log(Level.WARNING, "Number format exception reading data from parameter 'name'", exceptNumberFormat);
                }
            }
        }
        else {

            data = Integer.MIN_VALUE; 

 {
                String stringNumber = request.getParameter("name");

                try {
                    data = Integer.parseInt(stringNumber.trim());
                }
                catch(NumberFormatException exceptNumberFormat) {
                    IO.logger.log(Level.WARNING, "Number format exception reading data from parameter 'name'", exceptNumberFormat);
                }
            }

        }

        if(IO.staticReturnsTrueOrFalse()) {
            
            if (data > Integer.MIN_VALUE) {
                data--;
                int result = (int)(data);
                IO.writeLine("result: " + result);
            }
            else {
                IO.writeLine("data value is too small to decrement.");
            }
        }
        else {

            
            if (data > Integer.MIN_VALUE) {
                data--;
                int result = (int)(data);
                IO.writeLine("result: " + result);
            }
            else {
                IO.writeLine("data value is too small to decrement.");
            }

        }
    }