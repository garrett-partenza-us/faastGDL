
    private void goodB2G() throws Throwable {
        byte data;

        
        data = -1;

        
        BufferedReader readerBuffered = null;
        InputStreamReader readerInputStream = null;

        try {
            readerInputStream = new InputStreamReader(System.in, "UTF-8");
            readerBuffered = new BufferedReader(readerInputStream);

            String stringNumber = readerBuffered.readLine();
            if (stringNumber != null) {
                data = Byte.parseByte(stringNumber.trim());
            }
        }
        catch (IOException exceptIO) {
            IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
        }
        catch (NumberFormatException exceptNumberFormat) {
            IO.logger.log(Level.WARNING, "Error with number parsing", exceptNumberFormat);
        }
        finally {
            
            try {
                if (readerBuffered != null) {
                    readerBuffered.close();
                }
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error closing BufferedReader", exceptIO);
            }
            finally {
                try {
                    if (readerInputStream != null) {
                        readerInputStream.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing InputStreamReader", exceptIO);
                }
            }
        }

        for (int k = 0; k < 1; k++) {
            
            if (data > Byte.MIN_VALUE) {
                byte result = (byte)(data - 1);
                IO.writeLine("result: " + result);
            }
            else {
                IO.writeLine("data value is too small to perform subtraction.");
            }
        }
    }