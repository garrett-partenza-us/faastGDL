
    private void goodB2G1() throws Throwable {
        String data;
        if (privateReturnsTrue()) {
            data = ""; 
 {
                Properties properties = new Properties();
                FileInputStream streamFileInput = null;
                try {
                    streamFileInput = new FileInputStream("../common/config.properties");
                    properties.load(streamFileInput);
                    
                    data = properties.getProperty("data");
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
                }
                finally {
                    
                    try {
                        if (streamFileInput != null) {
                            streamFileInput.close();
                        }
                    }
                    catch (IOException exceptIO) {
                        IO.logger.log(Level.WARNING, "Error closing FileInputStream", exceptIO);
                    }
                }
            }
        }
        else {
            
            data = null;
        }

        if (privateReturnsFalse()) {
            
            IO.writeLine("Benign, fixed string");
        }
        else {

            int numberOfLoops;
            try {
                numberOfLoops = Integer.parseInt(data);
            }
            catch (NumberFormatException exceptNumberFormat) {
                IO.writeLine("Invalid response. Numeric input expected. Assuming 1.");
                numberOfLoops = 1;
            }

            
            if (numberOfLoops >= 0 && numberOfLoops <= 5) {
                for (int i=0; i < numberOfLoops; i++) {
                    IO.writeLine("hello world");
                }
            }

        }
    }