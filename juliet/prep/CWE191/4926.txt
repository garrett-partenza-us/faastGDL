
    private void goodB2G1(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        int data;
        if (IO.staticFive==5) {
            data = Integer.MIN_VALUE; 
 {
                StringTokenizer tokenizer = new StringTokenizer(request.getQueryString(), "&");
                while (tokenizer.hasMoreTokens()) {
                    String token = tokenizer.nextToken(); 
                    if(token.startsWith("id=")) {
                        try {
                            data = Integer.parseInt(token.substring(3)); 
                        }
                        catch(NumberFormatException exceptNumberFormat) {
                            IO.logger.log(Level.WARNING, "Number format exception reading id from query string", exceptNumberFormat);
                        }
                        break; 
                    }
                }
            }
        }
        else {
            
            data = 0;
        }

        if (IO.staticFive!=5) {
            
            IO.writeLine("Benign, fixed string");
        }
        else {

            if(data < 0) {
                
                if (data > (Integer.MIN_VALUE/2)) {
                    int result = (int)(data * 2);
                    IO.writeLine("result: " + result);
                }
                else {
                    IO.writeLine("data value is too small to perform multiplication.");
                }
            }

        }
    }