
    private void goodB2G(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        int count;
        if(IO.staticReturnsTrueOrFalse()) {
            count = Integer.MIN_VALUE; 
 {
                String stringNumber = request.getParameter("name");
                try {
                    count = Integer.parseInt(stringNumber.trim());
                }
                catch(NumberFormatException exceptNumberFormat) {
                    IO.logger.log(Level.WARNING, "Number format exception reading count from parameter 'name'", exceptNumberFormat);
                }
            }
        }
        else {

            count = Integer.MIN_VALUE; 

 {
                String stringNumber = request.getParameter("name");

                try {
                    count = Integer.parseInt(stringNumber.trim());
                }
                catch(NumberFormatException exceptNumberFormat) {
                    IO.logger.log(Level.WARNING, "Number format exception reading count from parameter 'name'", exceptNumberFormat);
                }
            }

        }

        if(IO.staticReturnsTrueOrFalse()) {
            int i = 0;
            
            if (count > 0 && count <= 20) {
                for (i = 0; i < count; i++) {
                    IO.writeLine("Hello");
                }
            }
        }
        else {

            int i = 0;

            
            if (count > 0 && count <= 20) {
                for (i = 0; i < count; i++) {
                    IO.writeLine("Hello");
                }
            }

        }
    }