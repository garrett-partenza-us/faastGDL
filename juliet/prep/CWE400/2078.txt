
    private void good1(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        if (IO.staticFalse) {
            
            IO.writeLine("Benign, fixed string");
        }
        else {

            if (request.getContentType() == null || !request.getContentType().contains("multipart/form-data")) {
                return;
            }

            FileOutputStream streamFileOutput = null;
            InputStream streamInput = null;

            try {
                streamFileOutput = new FileOutputStream("output_good.dat");
                streamInput = request.getInputStream();

                
                final int MAXSIZE = 10485760;
                int bytesReadCount = 0;
                for (;;) {
                    
                    if (bytesReadCount >= MAXSIZE) {
                        response.getWriter().write("File exceeds MAXSIZE!");
                        break;
                    }
                    byte[] inputBytes = new byte[1024];
                    int bytesRead = streamInput.read(inputBytes);
                    if (bytesRead == -1) {
                        break;
                    }
                    bytesReadCount += bytesRead;
                    streamFileOutput.write(inputBytes);
                }
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error!", exceptIO);
            }
            finally {
                try {
                    if (streamInput != null) {
                        streamInput.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing InputStream", exceptIO);
                }

                try {
                    if (streamFileOutput != null) {
                        streamFileOutput.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing FileOutputStream", exceptIO);
                }
            }

            response.getWriter().write("Uploaded file!");

        }
    }