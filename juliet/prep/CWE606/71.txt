
    public void bad() throws Throwable {
        String data;

        data = ""; 

 {
            Properties properties = new Properties();
            FileInputStream streamFileInput = null;

            try {
                streamFileInput = new FileInputStream("../common/config.properties");
                properties.load(streamFileInput);

                
                data = properties.getProperty("data");
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
            }
            finally {
                
                try {
                    if (streamFileInput != null) {
                        streamFileInput.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing FileInputStream", exceptIO);
                }
            }
        }

        int numberOfLoops;
        try {
            numberOfLoops = Integer.parseInt(data);
        }
        catch (NumberFormatException exceptNumberFormat) {
            IO.writeLine("Invalid response. Numeric input expected. Assuming 1.");
            numberOfLoops = 1;
        }

        for (int i=0; i < numberOfLoops; i++) {
            
            IO.writeLine("hello world");
        }

    }