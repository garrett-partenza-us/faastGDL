
    private void goodB2G2(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        String data;

        switch (6) {
        case 6:
            data = ""; 
 {
                Properties properties = new Properties();
                FileInputStream streamFileInput = null;
                try {
                    streamFileInput = new FileInputStream("../common/config.properties");
                    properties.load(streamFileInput);
                    
                    data = properties.getProperty("data");
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
                }
                finally {
                    
                    try {
                        if (streamFileInput != null) {
                            streamFileInput.close();
                        }
                    }
                    catch (IOException exceptIO) {
                        IO.logger.log(Level.WARNING, "Error closing FileInputStream", exceptIO);
                    }
                }
            }
            break;
        default:
            
            data = null;
            break;
        }

        switch (7) {
        case 7:
            if (data != null) {
                Cookie cookieSink = new Cookie("lang", URLEncoder.encode(data, "UTF-8"));
                
                response.addCookie(cookieSink);
            }
            break;
        default:
            
            IO.writeLine("Benign, fixed string");
            break;
        }
    }