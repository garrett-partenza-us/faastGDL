
    public void bad() throws Throwable {
        if (IO.STATIC_FINAL_FIVE == 5) {
            String contents = "";
            File file = new File("C:\\data.txt");
            FileInputStream streamFileInput = null;
            InputStreamReader readerInputStream = null;
            BufferedReader readerBuffered = null;
            try {
                
                streamFileInput = new FileInputStream(file);
                readerInputStream = new InputStreamReader(streamFileInput, "UTF-8");
                readerBuffered = new BufferedReader(readerInputStream);
                contents = readerBuffered.readLine();
                
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error with stream reading", exceptIO);
            }
            finally {
                
                try {
                    if (readerBuffered != null) {
                        readerBuffered.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing BufferedReader", exceptIO);
                }

                try {
                    if (readerInputStream != null) {
                        readerInputStream.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing InputStreamReader", exceptIO);
                }

                try {
                    if (streamFileInput != null) {
                        streamFileInput.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing FileInputStream", exceptIO);
                }
            }
            ServerSocket listener = null;
            Socket socket = null;
            OutputStreamWriter writerOutputStream = null;
            BufferedWriter writerBuffered = null;
            try {
                
                listener = new ServerSocket(39543);
                socket = listener.accept();
                writerOutputStream = new OutputStreamWriter(socket.getOutputStream(), "UTF-8");
                writerBuffered = new BufferedWriter(writerOutputStream);
                
                if (contents != null) {
                    writerBuffered.write(contents);
                }
            }
            catch (IOException exceptIO) {
                IO.logger.log(Level.WARNING, "Error with stream writing", exceptIO);
            }
            finally {
                
                try {
                    if (writerBuffered != null ) {
                        writerBuffered.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing BufferedWriter", exceptIO);
                }

                try {
                    if (writerOutputStream != null ) {
                        writerOutputStream.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing OutputStreamWriter", exceptIO);
                }

                
                try {
                    if (socket != null) {
                        socket.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing Socket", exceptIO);
                }

                try {
                    if (listener != null) {
                        listener.close();
                    }
                }
                catch (IOException exceptIO) {
                    IO.logger.log(Level.WARNING, "Error closing ServerSocket", exceptIO);
                }
            }
        }
    }