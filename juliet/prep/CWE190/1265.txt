
    private void goodB2G1(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        int data;
        if (IO.STATIC_FINAL_TRUE) {
            data = Integer.MIN_VALUE; 
 {
                Cookie cookieSources[] = request.getCookies();
                if (cookieSources != null) {
                    
                    String stringNumber = cookieSources[0].getValue();
                    try {
                        data = Integer.parseInt(stringNumber.trim());
                    }
                    catch(NumberFormatException exceptNumberFormat) {
                        IO.logger.log(Level.WARNING, "Number format exception reading data from cookie", exceptNumberFormat);
                    }
                }
            }
        }
        else {
            
            data = 0;
        }

        if (IO.STATIC_FINAL_FALSE) {
            
            IO.writeLine("Benign, fixed string");
        }
        else {

            if(data > 0) {
                
                if (data < (Integer.MAX_VALUE/2)) {
                    int result = (int)(data * 2);
                    IO.writeLine("result: " + result);
                }
                else {
                    IO.writeLine("data value is too large to perform multiplication.");
                }
            }

        }
    }