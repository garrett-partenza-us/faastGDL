
    private void goodB2G1() throws Throwable {
        float data;
        if (privateFive==5) {
            data = -1.0f; 
 {
                Connection connection = null;
                PreparedStatement preparedStatement = null;
                ResultSet resultSet = null;
                try {
                    
                    connection = IO.getDBConnection();
                    
                    preparedStatement = connection.prepareStatement("select name from users where id=0");
                    resultSet = preparedStatement.executeQuery();
                    
                    String stringNumber = resultSet.getString(1);
                    if (stringNumber != null) {
                        try {
                            data = Float.parseFloat(stringNumber.trim());
                        }
                        catch (NumberFormatException exceptNumberFormat) {
                            IO.logger.log(Level.WARNING, "Number format exception parsing data from string", exceptNumberFormat);
                        }
                    }
                }
                catch (SQLException exceptSql) {
                    IO.logger.log(Level.WARNING, "Error with SQL statement", exceptSql);
                }
                finally {
                    
                    try {
                        if (resultSet != null) {
                            resultSet.close();
                        }
                    }
                    catch (SQLException exceptSql) {
                        IO.logger.log(Level.WARNING, "Error closing ResultSet", exceptSql);
                    }

                    try {
                        if (preparedStatement != null) {
                            preparedStatement.close();
                        }
                    }
                    catch (SQLException exceptSql) {
                        IO.logger.log(Level.WARNING, "Error closing PreparedStatement", exceptSql);
                    }

                    try {
                        if (connection != null) {
                            connection.close();
                        }
                    }
                    catch (SQLException exceptSql) {
                        IO.logger.log(Level.WARNING, "Error closing Connection", exceptSql);
                    }
                }
            }
        }
        else {
            
            data = 0.0f;
        }

        if (privateFive!=5) {
            
            IO.writeLine("Benign, fixed string");
        }
        else {

            
            if (Math.abs(data) > 0.000001) {
                int result = (int)(100.0 / data);
                IO.writeLine(result);
            }
            else {
                IO.writeLine("This would result in a divide by zero");
            }

        }
    }