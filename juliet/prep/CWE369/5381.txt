
    private void goodB2G(HttpServletRequest request, HttpServletResponse response) throws Throwable {
        int dataCopy; {
            int data;

            data = Integer.MIN_VALUE; 

 {
                Cookie cookieSources[] = request.getCookies();
                if (cookieSources != null) {
                    
                    String stringNumber = cookieSources[0].getValue();
                    try {
                        data = Integer.parseInt(stringNumber.trim());
                    }
                    catch(NumberFormatException exceptNumberFormat) {
                        IO.logger.log(Level.WARNING, "Number format exception reading data from cookie", exceptNumberFormat);
                    }
                }
            }

            dataCopy = data;
        } {
            int data = dataCopy;

            
            if (data != 0) {
                IO.writeLine("100/" + data + " = " + (100 / data) + "\n");
            }
            else {
                IO.writeLine("This would result in a divide by zero");
            }

        }
    }